{"version":3,"sources":["components/Display.js","redux/configureStore.js","data/keys.js","components/KeyPad.js","redux/utilities/mapping_functions.js","components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["Display","react_default","a","createElement","id","React","Component","DIGIT","OPERATION","CAL","CLEAR","initialState","prev","next","result","exp","Number","$","text","operation","store","createStore","state","arguments","length","undefined","action","type","keys","key","KeyPad","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","clear","setResult","setOperation","accumulateExp","animate","clearB","refresh","operOverride","empty","mapChange","html","mapResult","oper","mapDigit","target","addClass","setTimeout","removeClass","e","__webpack_require__","then","t","input","digits","operationals","test","append","mapOperation","_this2","keyss","map","class","onClick","connect","dispatch","actionModule","Calculator","components_Display","components_KeyPad","App","es","components_Calculator","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.539d91e5.chunk.js","sourcesContent":["import React from 'react'\n\nclass Display extends React.Component {\n  render() {\n    return (\n      <div id=\"display\">\n        <div id='exp'></div>\n        <div id=\"input\"></div>\n      </div>\n    )\n  }\n}\n\nexport default Display;\n","import $ from 'jquery'\nimport {createStore} from 'redux'\n\n\n\nconst DIGIT= 'DIGIT';\nconst OPERATION= 'OPERATION';\nconst CAL= 'CAL';\nconst CLEAR= 'CLEAR';\nconst initialState = {\n      prev : 0,\n      next : 0,\n      result : 0,\n      exp : Number($('#display').text()),\n      operation : '+'\n}\n\n\nexport function addDigit(next, exp) {\n  return {\n    type: DIGIT,\n    next: next,\n    exp: exp\n  }\n}\n\nexport function addOperation(prev, operation){\n  return{\n    type: OPERATION,\n    prev: prev,\n    operation: operation\n  }\n}\n\nexport function calculate(result){\n  return{\n    type: CAL,\n    result: result\n  }\n}\n\nexport function allClear(){\n  return{\n    type: CLEAR,\n    prev: 0,\n    next: 0\n  }\n}\n\n\nfunction reducer(state= initialState, action){\n  switch(action.type){\n    case DIGIT : return {prev: state.prev, next: action.next, result: state.result, exp: action.exp, operation: state.operation};\n    case OPERATION: return {prev: action.prev, next: state.next, result: state.result, exp: state.exp, operation: action.operation};\n    case CAL: return {prev: state.prev, next: state.next, result: action.result, exp: state.exp, operation: state.operation};\n    case CLEAR: return {prev: action.prev, next: action.next, result: state.result, exp: state.exp, operation: state.operation};\n    default : return state;\n  }\n}\n\n\n//Redux Store__________________________________________\nconst store = createStore(reducer);\n\nexport default store;\n"," const keys = [\n   {key: 'AC', id: 'key-AC'},\n   {key: '/', id: 'key-/'},\n   {key: 'X', id: 'key-X'},\n   {key: '1', id: 'key-1'},\n   {key: '2', id: 'key-2'},\n   {key: '3', id: 'key-3'},\n   {key: '+', id: 'key-+'},\n   {key: '4', id: 'key-4'},\n   {key: '5', id: 'key-5'},\n   {key: '6', id: 'key-6'},\n   {key: '-', id: 'key--'},\n   {key: '7', id: 'key-7'},\n   {key: '8', id: 'key-8'},\n   {key: '9', id: 'key-9'},\n   {key: '.', id: 'key-dot'},\n   {key: '0', id: 'key-0'},\n   {key: '=', id: 'key-eq'}\n]\n\n\nexport default keys;\n","import React from 'react'\nimport $ from 'jquery'\nimport * as mapFuncModule from '../redux/utilities/mapping_functions'\nimport {connect} from 'react-redux'\nimport keys from '../data/keys.js'\n\n\n\nclass KeyPad extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.clear = this.clear.bind(this);\n    this.setResult = this.setResult.bind(this);\n    this.setOperation = this.setOperation.bind(this);\n    this.accumulateExp = this.accumulateExp.bind(this);\n    this.animate = this.animate.bind(this);\n    this.state = {\n      prev : 0,\n      next : 0,\n      result : 0,\n      exp : Number($('#display').text()),\n      operation : '+'\n    };\n    this.clearB = false;\n    this.refresh = false;\n    this.operOverride = false;\n  }\n  //All Clear function--------\n  clear(){\n    $('#exp').empty();\n    $('#display #input').empty();\n    this.props.mapChange();\n    this.clearB = true;\n  }\n  //------\n\n\n\n  //calculate final result from expressin accumulator-----\n  setResult(){\n    $('#display #input').html(this.props.exp); //display and set result as accumulated exp\n      this.result = this.props.exp;\n      this.refresh = true;\n      this.clearB = true;  //clear and reset after setting result\n      $('#exp').empty();\n      this.props.mapResult(this.result); //send result to store\n  }\n  //-------\n\n\n\n  //set operation and update prev--------\n  setOperation(oper){\n    if(this.operOverride){  //multiple operations (last operation overrides rest)\n          this.clearB = false;\n          this.operOverride = false;\n        }\n\n        if(this.clearB) {\n           this.prev = Number(this.props.next); //if exp is empty, next added input becomes prev\n          this.clearB = false;\n        }\n        else{\n           this.prev = this.props.exp;\n        }\n\n       this.operation = oper;\n        this.operOverride = true;\n  }\n  //--------\n\n\n\n  //Update exp accumulator----------\n  accumulateExp(){\n      var exp;\n      var next = $('#display #input').text(); //current input\n      switch(this.props.operation){\n        case '+': exp = this.props.prev + Number(next);\n                  break;\n        case '-': exp = this.props.prev - Number(next);\n                  break;\n        case 'X': exp = this.props.prev * Number(next);\n                  break;\n        case '/': exp = this.props.prev / Number(next);\n                  break;\n        default: return;\n      }\n      this.props.mapDigit(next, exp);\n  }\n  //-------------\n\n animate(target){\n   $(target).addClass('anim');\n   setTimeout(function() {\n       $('.anim').removeClass('anim');\n     }, 500);\n }\n\n\n  handleClick(e){\n\n    //animation for keypad_____________________\n    import('../sass/02-utilities/_animation.scss')\n    .then(this.animate(e.target));\n\n    //--------\n\n\n    var input = $(e.target).text();//current input key-----------\n\n   //regex____________________________\n    var digits = /[\\d.]/;//regex to match digits\n    var operationals = /[/X+-]/;//regex to match operations\n    //---------\n\n\n    if(operationals.test($('#display #input').text())){\n      $('#display #input').empty(); //clear display of digits if input is operation\n    }\n    if(this.refresh){\n        $('#exp').html(Number(this.props.result));\n        this.refresh = false;\n       if(digits.test(input)){\n         $('#exp').empty();\n         $('#input').empty();\n       }\n      else {this.clearB = false;}\n    }\n\n\n\n    if(digits.test(input)){  //if input is a DIGIT---------\n       $('#display #input').append(input);\n\n       this.accumulateExp();\n\n       $('#exp').append(input);\n       this.operOverride = false;\n    }\n    else if(operationals.test(input)){ //if input is an OPERATION------------\n        //checking if display intially contains digits (canbe stored as prev) prior to updating it with operation\n        if(!operationals.test($('#display #input').text())){\n           this.setOperation(input);\n        }\n\n        this.props.mapOperation(this.prev, this.operation);\n        $('#exp').append(input);\n        $('#display #input').html(input);\n    }\n     //-------------------------------------------------------------------\n   else if(input === '='){\n      this.setResult();\n    }\n\n   else if(input === 'AC'){\n      this.clear();\n   }\n }\n\n\n  render() {\n      var keyss = keys.map((a) => {\n        return (\n          <div id={a.id} key={a.key} class=\"key\" onClick={this.handleClick}>{a.key}</div>\n        )\n      });\n\n\n    return (\n      <div id=\"keypad\">\n        {keyss}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapFuncModule.mapStateToProps, mapFuncModule.mapDispatchToProps)(KeyPad) ;\n","\nimport * as actionModule from '../configureStore'\n\n\n//mapping state and props to Redux-------\nexport const mapStateToProps = (state)  => {\n  return {\n    prev: state.prev,\n    next: state.next,\n    result: state.result,\n    exp: state.exp,\n    operation: state.operation\n  };\n};\n\nexport const mapDispatchToProps = (dispatch) => {\n  return {\n    mapDigit : function(next,exp) {\n        dispatch(actionModule.addDigit(next, exp));\n     },\n    mapOperation : function(prev, operation) {\n       dispatch(actionModule.addOperation(prev, operation));\n    },\n    mapResult : function(result) {\n       dispatch(actionModule.calculate(result));\n    },\n    mapChange :  function() {\n       dispatch(actionModule.allClear());\n    }\n  };\n};\n","import React from 'react'\nimport Display from './Display';\nimport KeyPad from './KeyPad';\n\n\nclass Calculator extends React.Component {\n  render() {\n    return(\n      <div id=\"calc\">\n        <Display />\n        <KeyPad />\n      </div>\n    );\n  }\n}\n\nexport default Calculator;\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux'\nimport './App.scss';\nimport Calculator from './components/Calculator.js'\nimport store from './redux/configureStore'\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Calculator />\n       </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'babel-polyfill';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}