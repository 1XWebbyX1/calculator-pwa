{"version":3,"sources":["data/keys.js","components/KeyPad.js","redux/utilities/mapping_functions.js"],"names":["keys","key","id","KeyPad","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","clear","setResult","setOperation","accumulateExp","animate","state","prev","next","result","exp","Number","$","text","operation","clearB","refresh","operOverride","empty","mapChange","html","mapResult","oper","mapDigit","target","addClass","setTimeout","removeClass","e","__webpack_require__","then","t","input","digits","operationals","test","append","mapOperation","_this2","keyss","map","a","react_default","createElement","class","onClick","React","Component","connect","dispatch","actionModule"],"mappings":"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","file":"static/js/3.0be51116.chunk.js","sourcesContent":[" const keys = [\n   {key: 'AC', id: 'key-AC'},\n   {key: '/', id: 'key-/'},\n   {key: 'X', id: 'key-X'},\n   {key: '1', id: 'key-1'},\n   {key: '2', id: 'key-2'},\n   {key: '3', id: 'key-3'},\n   {key: '+', id: 'key-+'},\n   {key: '4', id: 'key-4'},\n   {key: '5', id: 'key-5'},\n   {key: '6', id: 'key-6'},\n   {key: '-', id: 'key--'},\n   {key: '7', id: 'key-7'},\n   {key: '8', id: 'key-8'},\n   {key: '9', id: 'key-9'},\n   {key: '=', id: 'key-eq'},\n   {key: '0', id: 'key-0'},\n   {key: '.', id: 'key-.'}\n]\n\n\nexport default keys;\n","import React from 'react'\nimport $ from 'jquery'\nimport * as mapFuncModule from '../redux/utilities/mapping_functions'\nimport {connect} from 'react-redux'\nimport keys from '../data/keys.js'\n\n\n\nclass KeyPad extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n    this.clear = this.clear.bind(this);\n    this.setResult = this.setResult.bind(this);\n    this.setOperation = this.setOperation.bind(this);\n    this.accumulateExp = this.accumulateExp.bind(this);\n    this.animate = this.animate.bind(this);\n    this.state = {\n      prev : 0,\n      next : 0,\n      result : 0,\n      exp : Number($('#display').text()),\n      operation : '+'\n    };\n    this.clearB = false;\n    this.refresh = false;\n    this.operOverride = false;\n  }\n  //All Clear function--------\n  clear(){\n    $('#exp').empty();\n    $('#display #input').empty();\n    this.props.mapChange();\n    this.clearB = true;\n  }\n  //------\n\n\n\n  //calculate final result from expressin accumulator-----\n  setResult(){\n    $('#display #input').html(this.props.exp); //display and set result as accumulated exp\n      this.result = this.props.exp;\n      this.refresh = true;\n      this.clearB = true;  //clear and reset after setting result\n      $('#exp').empty();\n      this.props.mapResult(this.result); //send result to store\n  }\n  //-------\n\n\n\n  //set operation and update prev--------\n  setOperation(oper){\n    if(this.operOverride){  //multiple operations (last operation overrides rest)\n          this.clearB = false;\n          this.operOverride = false;\n        }\n\n        if(this.clearB) {\n           this.prev = Number(this.props.next); //if exp is empty, next added input becomes prev\n          this.clearB = false;\n        }\n        else{\n           this.prev = this.props.exp;\n        }\n\n       this.operation = oper;\n        this.operOverride = true;\n  }\n  //--------\n\n\n\n  //Update exp accumulator----------\n  accumulateExp(){\n      var exp;\n      var next = $('#display #input').text(); //current input\n      switch(this.props.operation){\n        case '+': exp = this.props.prev + Number(next);\n                  break;\n        case '-': exp = this.props.prev - Number(next);\n                  break;\n        case 'X': exp = this.props.prev * Number(next);\n                  break;\n        case '/': exp = this.props.prev / Number(next);\n                  break;\n        default: return;\n      }\n      this.props.mapDigit(next, exp);\n  }\n  //-------------\n\n animate(target){\n   $(target).addClass('anim');\n   setTimeout(function() {\n       $('.anim').removeClass('anim');\n     }, 500);\n }\n\n\n  handleClick(e){\n\n    //animation for keypad_____________________\n    import('../sass/02-utilities/_animation.scss')\n    .then(this.animate(e.target));\n\n    //--------\n\n\n    var input = $(e.target).text();//current input key-----------\n\n   //regex____________________________\n    var digits = /[\\d.]/;//regex to match digits\n    var operationals = /[/X+-]/;//regex to match operations\n    //---------\n\n\n    if(operationals.test($('#display #input').text())){\n      $('#display #input').empty(); //clear display of digits if input is operation\n    }\n    if(this.refresh){\n        $('#exp').html(Number(this.props.result));\n        this.refresh = false;\n       if(digits.test(input)){\n         $('#exp').empty();\n         $('#input').empty();\n       }\n      else {this.clearB = false;}\n    }\n\n\n\n    if(digits.test(input)){  //if input is a DIGIT---------\n       $('#display #input').append(input);\n\n       this.accumulateExp();\n\n       $('#exp').append(input);\n       this.operOverride = false;\n    }\n    else if(operationals.test(input)){ //if input is an OPERATION------------\n        //checking if display intially contains digits (canbe stored as prev) prior to updating it with operation\n        if(!operationals.test($('#display #input').text())){\n           this.setOperation(input);\n        }\n\n        this.props.mapOperation(this.prev, this.operation);\n        $('#exp').append(input);\n        $('#display #input').html(input);\n    }\n     //-------------------------------------------------------------------\n   else if(input === '='){\n      this.setResult();\n    }\n\n   else if(input === 'AC'){\n      this.clear();\n   }\n }\n\n\n  render() {\n      var keyss = keys.map((a) => {\n        return (\n          <div id={a.id} key={a.key} class=\"key\" onClick={this.handleClick}>{a.key}</div>\n        )\n      });\n\n\n    return (\n      <div id=\"keypad\">\n        {keyss}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapFuncModule.mapStateToProps, mapFuncModule.mapDispatchToProps)(KeyPad) ;\n","\nimport * as actionModule from '../configureStore'\n\n\n//mapping state and props to Redux-------\nexport const mapStateToProps = (state)  => {\n  return {\n    prev: state.prev,\n    next: state.next,\n    result: state.result,\n    exp: state.exp,\n    operation: state.operation\n  };\n};\n\nexport const mapDispatchToProps = (dispatch) => {\n  return {\n    mapDigit : function(next,exp) {\n        dispatch(actionModule.addDigit(next, exp));\n     },\n    mapOperation : function(prev, operation) {\n       dispatch(actionModule.addOperation(prev, operation));\n    },\n    mapResult : function(result) {\n       dispatch(actionModule.calculate(result));\n    },\n    mapChange :  function() {\n       dispatch(actionModule.allClear());\n    }\n  };\n};\n"],"sourceRoot":""}